FROM tomcat:8.5.47-jdk8-openjdk
COPY . /app
WORKDIR /app
RUN ./mvnw package -DskipTests
#./mvnw -N io.takari:maven:wrapper -Dmaven=3.3.3  -> to update maven wrapper
EXPOSE 8080
RUN cp /app/target/*.war /usr/local/tomcat/webapps/ROOT.war
CMD ["/usr/local/tomcat/bin/catalina.sh", "run"]


# run using "docker build -t give_a_name -f file_name src/main/java/codeinsidedocker"
FROM openjdk:11-jdk
ADD app /app
WORKDIR /app
RUN javac -cp lombok.jar Hello.java
CMD ["java" , "Hello", "-cp", "lombok.jar"]


# FROM openjdk:11-jdk
# COPY ./Hello.class /
# CMD ["java", "Hello"]


# FROM alpine
# CMD ["ls"]


###### BAD DOCKER FILE ######
# FROM alpine
# ADD ./ /app/                                          -> we are adding folder before installing JDK
# RUN apk add openjdk11                                 -> pulls the jdk which is not a good practice
# WORKDIR /app                                          -> we are adding whole project instead of just JAR
# CMD ["java", "-jar", "target/abc-0.0.1-SNAPSHOT.jar"] -> we only need JRE not JDK

###### IMPROVED DOCKER FILE ######
# FROM openjdk:11-jre-slim            -> using a version-tagged starting image instead of latest, also OS+JRE image so we don't need to install JDK separately.
# WORKDIR /app                        -> workdir doesn't change unlike previous dockerfile, since moved to 2nd instruction. if there's small change in code then 2nd layer in previous used to build again so all below layers were building again
# ADD target/abc-0.0.1-SNAPSHOT.jar /app/
# CMD ["java", "-jar", "abc-0.0.1-SNAPSHOT.jar"]

